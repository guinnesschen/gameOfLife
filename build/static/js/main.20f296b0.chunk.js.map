{"version":3,"sources":["Game.js","App.js","index.js"],"names":["Cell","this","props","x","y","className","style","left","top","width","CELL_SIZE","height","Component","Game","state","cells","interval","isRunning","runGame","setState","runIteration","stopGame","timeoutHandler","window","clearTimeout","handleIntervalChange","event","target","value","handleRandom","rows","cols","board","Math","random","makeCells","handleClear","makeEmptyBoard","handleClick","elemOffset","getElementOffset","offsetX","clientX","offsetY","clientY","floor","console","log","HEIGHT","WIDTH","newBoard","neighbors","calculateNeighbors","setTimeout","dirs","i","length","dir","y1","x1","push","rect","boardRef","getBoundingClientRect","doc","document","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","backgroundSize","onClick","ref","n","map","cell","key","onChange","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20f296b0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Game.css'\n\nconst CELL_SIZE = 20;\nconst WIDTH = 800;  \nconst HEIGHT = 600;\n\nclass Cell extends Component {\n    render() {\n        const {x, y} = this.props;\n        return (\n            <div className=\"Cell\" \n                style={{\n                    left: `${CELL_SIZE * x + 1}px`,\n                    top: `${CELL_SIZE * y + 1}px`,\n                    width: `${CELL_SIZE - 1}px`,\n                    height: `${CELL_SIZE - 1}px`\n                }}/>\n        );\n    }\n}\n\n\nclass Game extends Component {\n    constructor() {\n        super();\n        this.rows = HEIGHT / CELL_SIZE;\n        this.cols = WIDTH / CELL_SIZE;\n        this.board = this.makeEmptyBoard();\n    }\n\n    state = {\n        cells: [],\n        interval: 100,\n        isRunning: false,\n    }\n\n    runGame = () => {\n        this.setState({isRunning: true});\n        this.runIteration();\n    }\n\n    stopGame = () => {\n        this.setState({isRunning: false});\n        if (this.timeoutHandler){\n            window.clearTimeout(this.timeoutHandler);\n            this.timeoutHandler = null;\n        }\n    }\n\n    runIteration() {\n        console.log(\"running iteration\");\n        let newBoard = this.makeEmptyBoard();\n\n        for (let y = 0; y < this.rows; y++){\n            for (let x = 0; x < this.cols; x++){\n                let neighbors = this.calculateNeighbors(this.board, x, y);\n                if (this.board[y][x]){\n                    if (neighbors === 2 || neighbors === 3){\n                        newBoard[y][x] = true;\n                    }\n                    else {\n                        newBoard[y][x] = false;\n                    }\n                }\n                else {\n                    if (!this.board[y][x] && neighbors === 3){\n                        newBoard[y][x] = true;\n                    }\n                }\n            }\n        }\n\n        this.board = newBoard;\n        this.setState({cells: this.makeCells()});\n        this.timeoutHandler = window.setTimeout(() => {\n            this.runIteration();\n        }, this.state.interval)\n\n    }\n\n    calculateNeighbors(board, x, y) {\n        let neighbors = 0;\n        const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\n        for (let i = 0; i < dirs.length; i++){\n            const dir = dirs[i];\n            let y1 = y + dir[0]\n            let x1 = x + dir[1]\n\n            if (x1 >= 0 && x1 < this.cols && y1 >= 0 && y1 < this.rows && board[y1][x1]) {\n                neighbors++;\n            }\n        }\n\n        return neighbors;\n    }\n\n    handleIntervalChange = (event) => {\n        this.setState({interval: event.target.value});\n    }\n\n    handleRandom = () => {\n        for (let y = 0; y < this.rows; y++){\n            for (let x = 0; x < this.cols; x++){\n                this.board[y][x] = (Math.random() >= 0.5);\n            }\n        }\n        this.setState({cells: this.makeCells()});\n    }\n\n    handleClear = () => {\n        this.board = this.makeEmptyBoard();\n        this.setState({cells: this.makeCells()});\n    }\n\n    makeEmptyBoard() {\n        let board = [];\n        for (let y = 0; y < this.rows; y++){\n            board[y] = []\n            for (let x = 0; x < this.cols; x++){\n                board[y][x] = false;\n            }\n        }\n        return board;\n    }\n\n    makeCells() {\n        let cells = []\n        for (let y = 0; y < this.rows; y++){\n            for (let x = 0; x < this.cols; x++){\n                if (this.board[y][x]){\n                    cells.push({x, y});\n                }\n            }\n        }\n        return cells;\n    }\n\n    getElementOffset() {\n        const rect = this.boardRef.getBoundingClientRect();\n        const doc = document.documentElement;\n        return {\n            x: (rect.left + window.pageXOffset) - doc.clientLeft,\n            y: (rect.top + window.pageYOffset) - doc.clientTop\n        };\n    }\n\n    handleClick = (event) => {\n        const elemOffset = this.getElementOffset();\n        const offsetX = event.clientX - elemOffset.x;\n        const offsetY = event.clientY - elemOffset.y;\n        const x = Math.floor(offsetX / CELL_SIZE);\n        const y = Math.floor(offsetY / CELL_SIZE);\n\n        if (x >= 0 && x <= this.cols && y >= 0 && y <= this.rows){\n            this.board[y][x] = !this.board[y][x];\n        }\n        console.log(this.state.cells)\n        this.setState({cells: this.makeCells()});\n    }\n\n    render() {\n        const {cells, interval, isRunning} = this.state;\n        return (\n            <div>\n                <div className=\"Board\" \n                    style={{width: WIDTH, height: HEIGHT, backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`}}\n                    onClick={this.handleClick}\n                    ref={(n) => {this.boardRef = n;}}>\n\n                    {cells.map(cell => (\n                        <Cell x={cell.x} y={cell.y} key={`${cell.x}, ${cell.y}`}/>\n                    ))}\n                </div>\n                <div className=\"controls\">\n                    Update every <input value={this.state.interval} onChange={this.handleIntervalChange}/> ms\n                    {isRunning ? \n                        <button className=\"button\" onClick={this.stopGame}>Stop</button>  : \n                        <button className=\"button\" onClick={this.runGame}>Run</button>\n                    }\n                    <button className=\"button\" onClick={this.handleRandom}>Random</button>\n                    <button className=\"button\" onClick={this.handleClear}>Clear</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Conway's Game of Life</h1>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}